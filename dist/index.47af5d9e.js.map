{"mappings":"AAAA,MAEMA,EAAaC,SAASC,eAAc,QACpCC,EAAeF,SAASC,eAAc,iBACtCE,EAAYH,SAASC,eAAc,cACnCG,EAAiBJ,SAASC,eAAc,cACxCI,EAAiBL,SAASC,eAAc,4BCHrCK,EAAkBC,EAAkBC,GACzC,IAAIC,EDHa,GCGQD,EAErBE,EAAK,OAEJ,IAAIC,EAHCF,EDJO,GCOCE,EAAIF,KACdE,EAAKJ,EAAiBK,OAAS,GADZD,IAIvBD,EAAMG,KAAKN,EAAiBI,WAGzBD,WAGFI,EAAsBC,EAAGR,GAC9B,IACIG,EAAQJ,EAAkBC,EADnBQ,EAAEC,OAAOC,QAAQT,MAG5BJ,EAAec,cAAa,WAAYC,UAAUC,OAAM,UACxDL,EAAEC,OAAOG,UAAUE,IAAG,UAEtBC,EAAWZ,YCvBNa,EAAiBC,GAClB,IAAIC,EAAOpB,EAAeqB,QAAQC,kBAAkBC,WAAU,UAC9DH,EAAKP,cAAa,UAAWW,MAAMC,gBAAe,IAAON,EAAMO,MAC/DN,EAAKP,cAAa,UAAWc,UAAS,IAAOR,EAAMO,MAC5CN,WAaNQ,EAAiBT,GACtBtB,EAAagB,cAAa,iBAAkBW,MAAMC,gBAAe,IAAON,EAAMO,MAC9E7B,EAAagB,cAAa,iBAAkBc,UAAS,IAAOR,EAAMO,eAZnCG,GAC/B/B,EAAUgC,UAAS,OAEd,IAAIxB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIc,EAAOF,EAAiBW,GAC5B/B,EAAUiC,OAAOX,IAQrBY,CAA0Bb,GAC1BtB,EAAaiB,UAAUE,IAAG,iBClBrBC,EAAWZ,GAChBX,EAAWoC,UAAS,GAEpBzB,EAAM4B,SAAQd,IACV,IAAIC,EAAOpB,EAAeqB,QAAQC,kBAAkBC,WAAU,GAC9DH,EAAKP,cAAa,UAAWW,MAAMC,gBAAe,IAAON,EAAMO,MAC/DN,EAAKP,cAAa,UAAWc,UAAS,IAAOR,EAAMO,MACnDN,EAAKR,QAAQsB,GAAKf,EAAMgB,IACxBf,EAAKR,QAAQc,IAAMP,EAAMO,IACzBN,EAAKgB,iBAAgB,SAAQ,WACzBR,EAAiBT,MAGrBzB,EAAWqC,OAAOX,MDY1BzB,SAASC,eAAc,SAAUwC,iBAAgB,oBAH7CvC,EAAaiB,UAAUC,OAAM,4BEvB7B,IAAIsB,yBDoBJ,IAAIC,QAAYC,MHxBD,6CGyBID,EAAIE,OCrBJC,GAEnBxB,EADYhB,EAAkBoC,EAAQ,aHuBdnC,GACxB,IAAIwC,EAAYC,KAAKC,KAAK1C,EAAiBK,OD5B1B,IC8BjBR,EAAe+B,UAAS,OAEnB,IAAIxB,EAAI,EAAGA,EAAIoC,EAAWpC,IAAK,CAChC,IAAIuC,EAAKlD,SAASmD,cAAa,MAC/BD,EAAGlB,UAAYrB,EAAI,EACnBuC,EAAGjC,QAAQT,KAAOG,EAAI,EACtBuC,EAAGT,iBAAgB,SAAQ,SAAW1B,GAClCD,EAAsBC,EAAGR,MAEnB,IAANI,GAASuC,EAAG/B,UAAUE,IAAG,UAC7BjB,EAAegC,OAAOc,IGjC1BE,CAAmBV,GAGvBW,GCHArD,SAASC,eAAc,UAAWwC,iBAAgB,wBALjB1B,GAE7BkB,yBF0BA,IAAIU,QAAYC,MAAMU,oDACJX,EAAIE,OE5BJU,OCAtBvD,SAASkB,cAAa,SAAUsC,KAAOC,OAAOC,SAASF","sources":["public/src/scripts/variables.js","public/src/scripts/pagination.js","public/src/scripts/components/activeWindow.js","public/src/scripts/operations.js","public/src/scripts/components/mainWindow.js","public/src/scripts/components/sidebar.js","public/src/main.js"],"sourcesContent":["const baseColorsUrl = 'http://localhost:8080/colors';\nconst perPageCount = 12;\nconst mainWindow = document.getElementById('main');\nconst activeWindow = document.getElementById('active-window');\nconst fakeTiles = document.getElementById('fake-tiles');\nconst paginationWrap = document.getElementById('pagination');\nconst swatchTemplate = document.getElementById(\"swatch-template\");\n\n\nexport { baseColorsUrl, perPageCount, mainWindow, activeWindow, fakeTiles, paginationWrap, swatchTemplate}","import { perPageCount, paginationWrap } from './variables';\nimport { placeTiles } from './operations';\n\nfunction getPaginatedTiles(activeCollection, page) {\n    let max = perPageCount * page;\n    let min = max - perPageCount;\n    let tiles = [];\n\n    for (var i = min; i < max; i++) {\n        if (i > (activeCollection.length - 1)) {\n            break;\n        } \n        tiles.push(activeCollection[i]);\n    }\n    \n    return tiles;\n}\n\nfunction handlePaginationClick(e, activeCollection) {\n    let page = e.target.dataset.page;\n    let tiles = getPaginatedTiles(activeCollection, page);\n\n    paginationWrap.querySelector('.active').classList.remove('active');\n    e.target.classList.add('active');\n\n    placeTiles(tiles);\n}\n\nfunction generatePagination(activeCollection) {\n    let pageCount = Math.ceil(activeCollection.length / perPageCount);\n\n    paginationWrap.innerHTML = '';\n\n    for (let i = 0; i < pageCount; i++) {\n        let el = document.createElement('li');\n        el.innerText = i + 1;\n        el.dataset.page = i + 1;\n        el.addEventListener('click', function(e) {\n            handlePaginationClick(e, activeCollection);\n        });\n        if (i === 0) el.classList.add('active');\n        paginationWrap.append(el);\n    }\n}\n\nexport { getPaginatedTiles, generatePagination }","import { activeWindow, fakeTiles, swatchTemplate } from '../variables';\n\nfunction generateFakeTile(color) {\n        let tile = swatchTemplate.content.firstElementChild.cloneNode(true);\n        tile.querySelector('.color').style.backgroundColor = `#${color.hex}`;\n        tile.querySelector('.label').innerText = `#${color.hex}`;\n        return tile;\n}\n\nfunction generateAndPlaceFakeTiles(baseColor) {\n    fakeTiles.innerHTML = '';\n\n    for (let i = 0; i < 5; i++) {\n        let tile = generateFakeTile(baseColor);\n        fakeTiles.append(tile);\n    }\n\n}\n\nfunction openActiveWindow(color) {\n    activeWindow.querySelector('.active-color').style.backgroundColor = `#${color.hex}`;\n    activeWindow.querySelector('.active-label').innerText = `#${color.hex}`;\n    generateAndPlaceFakeTiles(color);\n    activeWindow.classList.add('open');\n}\n\nfunction closeActiveWindow() {\n    activeWindow.classList.remove('open');\n}\n\ndocument.getElementById('clear').addEventListener('click', closeActiveWindow);\n\nexport { openActiveWindow }","import { baseColorsUrl, mainWindow, swatchTemplate } from './variables';\nimport { generatePagination } from './pagination';\nimport { openActiveWindow } from './components/activeWindow';\n\n\nfunction placeTiles(tiles) {\n    mainWindow.innerHTML = '';\n\n    tiles.forEach(color => {\n        let tile = swatchTemplate.content.firstElementChild.cloneNode(true);\n        tile.querySelector('.color').style.backgroundColor = `#${color.hex}`;\n        tile.querySelector('.label').innerText = `#${color.hex}`\n        tile.dataset.id = color._id;\n        tile.dataset.hex = color.hex;\n        tile.addEventListener('click', function() {\n            openActiveWindow(color);\n        });\n\n        mainWindow.append(tile);\n    });\n}\n\n\nasync function getAllColors() {\n    let res = await fetch(baseColorsUrl);\n    let colors = await res.json();\n    return colors;\n}\n\n\nasync function getRandomColor() {\n    let res = await fetch(baseColorsUrl + '/random');\n    let color = await res.json();\n    return color;\n}\n\n\nexport { placeTiles, getAllColors, getRandomColor }","import { getAllColors, placeTiles } from \"../operations\";\nimport { getPaginatedTiles, generatePagination } from '../pagination';\n\nasync function setInitialState() {\n    let colors = await getAllColors();\n    let tiles = getPaginatedTiles(colors, 1);\n    placeTiles(tiles);\n\n    generatePagination(colors);\n}\n\nsetInitialState();\n","import { openActiveWindow } from \"./activeWindow\";\nimport { getRandomColor } from \"../operations\";\n\nasync function handleRandomClick(e) {\n    let color = await getRandomColor();\n    openActiveWindow(color);\n}\n\ndocument.getElementById('random').addEventListener('click', handleRandomClick);","let activeCollection = {};\n\nimport './scripts/components';\n\ndocument.querySelector('.logo').href = window.location.href;\n\n"],"names":["$92bd6818e5ace77f$export$b6ec205fc2137019","document","getElementById","$92bd6818e5ace77f$export$8f90e230b63f0a99","$92bd6818e5ace77f$export$fe1a239aa16c59e4","$92bd6818e5ace77f$export$a79f5602d8f23eda","$92bd6818e5ace77f$export$d3e40ccd22a1baf8","$18acb483dd75f986$export$e314fa2560a4084d","activeCollection","page","max","tiles","i","length","push","$18acb483dd75f986$var$handlePaginationClick","e","target","dataset","querySelector","classList","remove","add","$7eff42f670c7a9ea$export$55a9943e4835f259","$c8eec8fc06c75678$var$generateFakeTile","color","tile","content","firstElementChild","cloneNode","style","backgroundColor","hex","innerText","$c8eec8fc06c75678$export$b2ec1da986821b9e","baseColor","innerHTML","append","$c8eec8fc06c75678$var$generateAndPlaceFakeTiles","forEach","id","_id","addEventListener","colors","res","fetch","json","$7eff42f670c7a9ea$export$a051665c24a3515b","pageCount","Math","ceil","el","createElement","$18acb483dd75f986$export$8c44fad9dbe70e9b","$6b0b6f42905fde9c$var$setInitialState","$92bd6818e5ace77f$export$ecbbed6f63bbe285","$7eff42f670c7a9ea$export$dc15573ec88474fb","href","window","location"],"version":3,"file":"index.47af5d9e.js.map"}